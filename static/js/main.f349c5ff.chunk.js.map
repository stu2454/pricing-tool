{"version":3,"sources":["assets/NDIS_logo.png","components/ProductCategorySelect.js","components/SupportItemSelect.js","components/PriceFeedback.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","ProductCategorySelect","_ref","categories","setSelectedCategory","selectedCategory","React","createElement","className","htmlFor","id","value","onChange","e","target","map","category","index","key","SupportItemSelect","productData","setSelectedItem","filteredItems","filter","item","SupportItemCategory","SupportItem","PriceFeedback","selectedItem","itemData","find","SupportItemNumber","Description","P25","P75","Navbar","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","App","setProductData","useState","thankYouView","setThankYouView","useEffect","Papa","parse","process","download","header","encoding","complete","result","data","Set","src","ndisLogo","alt","style","width","display","backgroundColor","border","alignItems","justifyContent","marginBottom","fontSize","textAlign","length","onClick","resetSelection","showThankYouMessage","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCuBzBC,MArBeC,IAA2D,IAA1DC,WAAEA,EAAUC,oBAAEA,EAAmBC,iBAAEA,GAAkBH,EAClF,OACEI,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,QAAQ,WAAWD,UAAU,cAAa,4BACjDF,IAAAC,cAAA,UACEG,GAAG,WACHF,UAAU,cACVG,MAAON,EACPO,SAAWC,GAAMT,EAAoBS,EAAEC,OAAOH,QAE9CL,IAAAC,cAAA,UAAQI,MAAM,IAAG,2BAAgC,IAChDR,EAAWY,IAAI,CAACC,EAAUC,IACzBX,IAAAC,cAAA,UAAQW,IAAKD,EAAON,MAAOK,GACxBA,OCUEG,MAvBWjB,IAAwD,IAAvDG,iBAAEA,EAAgBe,YAAEA,EAAWC,gBAAEA,GAAiBnB,EAE3E,MAAMoB,EAAgBF,EAAYG,OAAOC,GAAQA,EAAKC,sBAAwBpB,GAE9E,OACEC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOE,QAAQ,OAAOD,UAAU,cAAa,wBAC7CF,IAAAC,cAAA,UACEG,GAAG,OACHF,UAAU,cACVI,SAAWC,GAAMQ,EAAgBR,EAAEC,OAAOH,QAE1CL,IAAAC,cAAA,UAAQI,MAAM,IAAG,6BAChBW,EAAcP,IAAI,CAACS,EAAMP,IACxBX,IAAAC,cAAA,UAAQW,IAAKD,EAAON,MAAOa,EAAKE,aAC7BF,EAAKE,iBCqBHC,MApCOzB,IAAmC,IAAlC0B,aAAEA,EAAYR,YAAEA,GAAalB,EAElD,MAAM2B,EAAWT,EAAYU,KAAKN,GAAQA,EAAKE,cAAgBE,GAG/D,OAAKC,EAKHvB,IAAAC,cAAA,OAAKC,UAAU,kBAEbF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOC,UAAU,cAAa,sBAC9BF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,SAAIsB,EAASE,mBAAsB,OAIvCzB,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOC,UAAU,cAAa,gBAC9BF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,SAAIsB,EAASG,aAAgB,OAIjC1B,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAOC,UAAU,cAAa,gBAC9BF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,SAAG,4DAA0DsB,EAASI,IAAI,SAAOJ,EAASK,QAvBzF5B,IAAAC,cAAA,SAAG,kDCeC4B,MApBAA,IAEX7B,IAAAC,cAAA,OAAKC,UAAU,iDACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,KAAGC,UAAU,eAAe4B,KAAK,KAAI,gBACrC9B,IAAAC,cAAA,UAAQC,UAAU,iBAAiB6B,KAAK,SAASC,iBAAe,WAAWC,iBAAe,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAChKpC,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BE,GAAG,aAC3CJ,IAAAC,cAAA,MAAIC,UAAU,cACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBmC,eAAa,OAAOP,KAAK,KAAI,qCCkH3DQ,MAvHf,WACE,MAAOxB,EAAayB,GAAkBC,mBAAS,KACxCzC,EAAkBD,GAAuB0C,mBAAS,KAClDlB,EAAcP,GAAmByB,mBAAS,OAC1CC,EAAcC,GAAmBF,oBAAS,GAGnDG,oBAAU,KACRC,IAAKC,MAAMC,gCAA6C,CACtDC,UAAU,EACVC,QAAQ,EACRC,SAAU,QACVC,SAAWC,IACTZ,EAAeY,EAAOC,UAGzB,IAID,MAAMvD,EAAa,IAAI,IAAIwD,IAAIvC,EAAYL,IAAIS,GAAQA,EAAKC,uBAa5D,OAAIsB,EAEAzC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAC4B,EAAM,MACP7B,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,OACEqD,IAAKC,IACLC,IAAI,YACJC,MAAO,CACLC,MAAO,QACPC,QAAS,eACTC,gBAAiB,cACjBC,OAAQ,WAId7D,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,UAAI,0CACJD,IAAAC,cAAA,SAAG,uIAQXD,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAC4B,EAAM,MACP7B,IAAAC,cAAA,OAAKC,UAAU,kBAEbF,IAAAC,cAAA,OAAKC,UAAU,mBAAmBuD,MAAO,CAAEE,QAAS,OAAQG,WAAY,SAAUC,eAAgB,gBAAiBC,aAAc,SAC/HhE,IAAAC,cAAA,MAAIwD,MAAO,CAAEQ,SAAU,OAAQC,UAAW,SAAU,yBACpDlE,IAAAC,cAAA,OACEqD,IAAKC,IACLC,IAAI,YACJC,MAAO,CACLC,MAAO,QACPC,QAAS,eACTC,gBAAiB,cACjBC,OAAQ,WAMd7D,IAAAC,cAACN,EAAqB,CACpBE,WAAYA,EACZC,oBAAqBA,EACrBC,iBAAkBA,IAInBA,GACCC,IAAAC,cAACY,EAAiB,CAChBd,iBAAkBA,EAClBe,YAAaA,EACbC,gBAAiBA,IAKpBO,GAAgBR,EAAYqD,OAAS,GACpCnE,IAAAC,cAACoB,EAAa,CAACC,aAAcA,EAAcR,YAAaA,IAIzDQ,GACCtB,IAAAC,cAAA,OAAKC,UAAU,oBAEbF,IAAAC,cAAA,UAAQC,UAAU,eAAekE,QAjFpBC,KACrBvE,EAAoB,IACpBiB,EAAgB,QA+EkD,kBAK1Df,IAAAC,cAAA,UAAQC,UAAU,kBAAkBkE,QAhFlBE,KAC1B5B,GAAgB,KA+E0D,qBC1G/D6B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxChF,EAAAc,EAAA,GAAAmE,KAAAjF,EAAAkF,KAAA,UAAqBD,KAAK9E,IAAiD,IAAhDgF,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASpF,EACpEgF,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCCDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrF,IAAAC,cAACD,IAAMsF,WAAU,KACftF,IAAAC,cAACqC,EAAG,QAORiC","file":"static/js/main.f349c5ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NDIS_logo.68346255.png\";","import React from 'react';\n\nconst ProductCategorySelect = ({ categories, setSelectedCategory, selectedCategory }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"category\" className=\"form-label\">Select Product Category:</label>\n      <select\n        id=\"category\"\n        className=\"form-select\"\n        value={selectedCategory} // Bind the dropdown value to the selectedCategory state\n        onChange={(e) => setSelectedCategory(e.target.value)} // Update the selected category state\n      >\n        <option value=\"\">---Select a Category---</option> {/* Placeholder when selectedCategory is empty */}\n        {categories.map((category, index) => (\n          <option key={index} value={category}>\n            {category}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default ProductCategorySelect;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst SupportItemSelect = ({ selectedCategory, productData, setSelectedItem }) => {\n  // Filter items by selected category\n  const filteredItems = productData.filter(item => item.SupportItemCategory === selectedCategory);\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"item\" className=\"form-label\">Select Support Item:</label>\n      <select\n        id=\"item\"\n        className=\"form-select\"\n        onChange={(e) => setSelectedItem(e.target.value)}\n      >\n        <option value=\"\">--Select a Support Item--</option>\n        {filteredItems.map((item, index) => (\n          <option key={index} value={item.SupportItem}>\n            {item.SupportItem}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default SupportItemSelect;\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst PriceFeedback = ({ selectedItem, productData }) => {\n  // Find the item in the product data based on the selected item\n  const itemData = productData.find(item => item.SupportItem === selectedItem);\n\n  // If no item data is found, handle it gracefully\n  if (!itemData) {\n    return <p>No data available for the selected item.</p>;\n  }\n\n  return (\n    <div className=\"price-feedback\">\n      {/* Labels and text for feedback boxes */}\n      <div className=\"form-group\">\n        <label className=\"form-label\">Support Item Code:</label>\n        <div className=\"item-code-box\">\n          <p>{itemData.SupportItemNumber}</p>  {/* Display item code */}\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\">Description:</label>\n        <div className=\"description-box\">\n          <p>{itemData.Description}</p>  {/* Display description */}\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"form-label\">Price Range:</label>\n        <div className=\"price-range-box\">\n          <p>Based on market data, prices for this item vary between ${itemData.P25} and ${itemData.P75}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PriceFeedback;\n\n\n\n\n\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">Pricing Tool</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport ProductCategorySelect from './components/ProductCategorySelect';\nimport SupportItemSelect from './components/SupportItemSelect';\nimport PriceFeedback from './components/PriceFeedback';\nimport Navbar from './components/Navbar';\nimport './styles.css';\nimport ndisLogo from './assets/NDIS_logo.png';\n\nfunction App() {\n  const [productData, setProductData] = useState([]); // Store CSV data\n  const [selectedCategory, setSelectedCategory] = useState(''); // Store selected category, start as empty string\n  const [selectedItem, setSelectedItem] = useState(null); // Store selected item\n  const [thankYouView, setThankYouView] = useState(false); // Manage thank-you message view\n\n// Load CSV data on component mount\nuseEffect(() => {\n  Papa.parse(process.env.PUBLIC_URL + '/productData.csv', {\n    download: true,\n    header: true, // Ensure CSV headers are parsed as keys\n    encoding: \"UTF-8\",  // Specify UTF-8 encoding\n    complete: (result) => {\n      setProductData(result.data); // Store parsed CSV data\n    },\n  });\n}, []);\n\n\n  // Extract unique categories from the CSV data\n  const categories = [...new Set(productData.map(item => item.SupportItemCategory))];\n\n  // Function to reset the state but stay on the Price Guide tab\n  const resetSelection = () => {\n    setSelectedCategory('');  // Reset category to empty string (default value in dropdown)\n    setSelectedItem(null);    // Reset item\n  };\n\n  // Function to show the thank-you message\n  const showThankYouMessage = () => {\n    setThankYouView(true); // Switch to the thank-you message view\n  };\n\n  if (thankYouView) {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"header-container\">\n          <h1>Provider Pricing Tool</h1>\n          <img\n            src={ndisLogo}\n            alt=\"NDIS Logo\"\n            style={{\n              width: '150px',\n              display: 'inline-block',\n              backgroundColor: 'transparent',\n              border: 'none',\n            }}\n          />\n        </div>\n        <div className=\"thank-you-container\">\n          <div className=\"thank-you-message\">\n            <h2>Thanks for using our Price Guide tool.</h2>\n            <p>If you have further questions, please do not hesitate to connect with the Assistive Technology team. Enjoy the rest of your day.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"container mt-5\">\n        {/* Flex container to align title and logo */}\n        <div className=\"header-container\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '40px' }}>\n          <h1 style={{ fontSize: '3rem', textAlign: 'left' }}>Provider Pricing Tool</h1>\n          <img\n            src={ndisLogo}\n            alt=\"NDIS Logo\"\n            style={{\n              width: '150px',\n              display: 'inline-block',\n              backgroundColor: 'transparent',\n              border: 'none',\n            }}\n          />\n        </div>\n\n        {/* Product Category Select */}\n        <ProductCategorySelect\n          categories={categories}\n          setSelectedCategory={setSelectedCategory}\n          selectedCategory={selectedCategory}\n        />\n\n        {/* Support Item Select (conditionally rendered) */}\n        {selectedCategory && (\n          <SupportItemSelect\n            selectedCategory={selectedCategory}\n            productData={productData}\n            setSelectedItem={setSelectedItem}\n          />\n        )}\n\n        {/* Price Feedback (conditionally rendered) */}\n        {selectedItem && productData.length > 0 && (\n          <PriceFeedback selectedItem={selectedItem} productData={productData} />\n        )}\n\n        {/* Button Container */}\n        {selectedItem && (\n          <div className=\"button-container\">\n            {/* \"Choose Another\" Button */}\n            <button className=\"reset-button\" onClick={resetSelection}>\n              Choose another\n            </button>\n\n            {/* \"I am Finished\" Button */}\n            <button className=\"finished-button\" onClick={showThankYouMessage}>\n              I am finished\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}